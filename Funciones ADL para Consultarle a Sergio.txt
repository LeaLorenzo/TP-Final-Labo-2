/*********************************************************//**
*
* \brief Agrega un Cliente al Arbol de Listas
* \param El ADL.
* \param stCliente dato - un cliente
* \return Retorna ADL
*
***********************************************************/
nodoArbol* agregarCliente(nodoArbol* ADL, stCliente dato)
{

    strcpy(ADL->dato.nombre, dato.nombre);
    strcpy(ADL->dato.apellido, dato.apellido);
    strcpy(ADL->dato.domicilio, dato.domicilio);
    strcpy(ADL->dato.email, dato.email);
    strcpy(ADL->dato.movil, dato.movil);
    ADL->dato.dni = dato.dni;
    ADL->dato.baja = dato.baja;
    ADL->dato.id = dato.id;
    ADL->dato.nroCliente = dato.nroCliente;

    ADL->consumos = inicLista();

    return ADL;
}


/*********************************************************//**
*
* \brief Busca un cliente en el ADL
* \param El ADL.
* \param El apellido del Cliente a buscar
* \return Retorna el cliente buscado y si no lo encuentra, retorna NULL
*
***********************************************************/
nodoArbol* buscarCliente(nodoArbol* ADL, char apellido[])
{
    nodoArbol* buscado = NULL;

    if (ADL != NULL)
    {
        if (strcmpi(ADL->dato.apellido, apellido) == 0)
        {
            buscado = ADL;
        }
        else
        {
            buscado = buscarCliente(ADL->izq, apellido);
            if (buscado == NULL)
            {
                buscado = buscarCliente(ADL->der, apellido);
            }
        }
    }

    return buscado;
}

/*********************************************************//**
*
* \brief Le da el alta a un Cliente en el ADL
* \param El ADL.
* \param Un Consumo para agregar al ADL
* \param El apellido del cliente
* \return Retorna ADL
*
***********************************************************/
nodoArbol* altaCliente(nodoArbol* ADL, nodoLista* nuevoConsumo, char apellido[])
{
    nodoArbol* clienteEncontrado = buscarCliente(ADL, apellido);

    if(clienteEncontrado == NULL)
    {
        stCliente c = cargaUnCliente();
        nodoArbol* nuevo = crearNodoArbol(c);
        nuevo = agregarCliente(ADL, c);
        ADL = insertarNodoArbol(ADL, nuevo);
        ADL->consumos = agregarFinal(ADL->consumos, nuevoConsumo);
    }
    else
    {
        clienteEncontrado->consumos = agregarFinal(clienteEncontrado->consumos, nuevoConsumo);
    }

    return ADL;
}


/*********************************************************//**
*
* \brief Pasa los datos del archivo al ADL
* \param El archivo de datos.
* \param El ADL.
* \param Nuevo Consumo.
* \return Retorna el ADL.
*
***********************************************************/
nodoArbol* archivo2ADL(char archivo[], nodoArbol* ADL, nodoLista* nuevoConsumo)
{
    stCliente c;
    stConsumos d;
    char apellido[30];
    int idEspecie;

    FILE* arch = fopen(archivo, "rb");

    if(arch)
    {
        while((ADL!=NULL) && (fread(&c, sizeof(stCliente), 1, arch) > 0))
        {

            strcpy(apellido, c.apellido);
            ADL = altaCliente(ADL, nuevoConsumo, apellido);

        }
        fclose(arch);
    }


    return ADL;
}
